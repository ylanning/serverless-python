import ioimport osimport pathlibfrom functools import lru_cachefrom decouple import Config, RepositoryEmpty, RepositoryEnv# import google-authimport google.auth# import google-cloud-secret-managerfrom google.cloud import secretmanagerBASE_DIR = pathlib.Path(__file__).parent.parentprint(BASE_DIR)ENV_PATH = BASE_DIR / ".env"print(ENV_PATH)# print(os.environ.get("GCLOUD_SECRET_LABEL") or  "py_env_file")@lru_cache()def get_config(use_gcloud=True):    if ENV_PATH.exists():        return Config(RepositoryEnv(str(ENV_PATH)))    from decouple import config    return configconfig = get_config()